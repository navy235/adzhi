@if (ViewData.TemplateInfo.TemplateDepth > 1)
{
    @ViewData.ModelMetadata.SimpleDisplayText
}
else
{
    foreach (var prop in ViewData.ModelMetadata.Properties.Where(pm => pm.ShowForEdit && !ViewData.TemplateInfo.Visited(pm)))
    {
        if (prop.HideSurroundingHtml)
        {
            @Html.Editor(prop.PropertyName)
        }
        else
        {
            var className = String.Empty;
            var HintClass = string.Empty;
            if (ViewData.ModelState[prop.PropertyName] != null && ViewData.ModelState[prop.PropertyName].Errors != null && ViewData.ModelState[prop.PropertyName].Errors.Count > 0)
            {
                className = "invalid";
            }
            if (prop.AdditionalValues.ContainsKey("HintClass"))
            {
                HintClass ="form-field-"+ prop.AdditionalValues["HintClass"].ToString();
            }
            <div class="form-field @className  @HintClass">
                @Html.Label(prop.PropertyName)

                @Html.Editor(prop.PropertyName)

              @*  @Html.Editor(prop.PropertyName, prop.TemplateHint ?? prop.DataTypeName)*@
                
                @Html.ValidationMessage(prop.PropertyName)
                
                @if (prop.AdditionalValues.ContainsKey("Hint"))
                {
                    <span class="field-hint-message">@prop.AdditionalValues["Hint"]</span>
                }
                
                
            </div>
        }
    }
}
